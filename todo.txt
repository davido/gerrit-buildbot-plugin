Problems
========
* If a task not get pulled by any tinderbox after some time out time (we call
  it idle timeout) then the job is reported to gerrit with unknown (neutral)
  state (even if some tinderbox tasks reported a result)
* If a task was pulled by some tinderbox, but no result is reported in some
  reasonable amount of time (we call it engaged timeout), then the task should
  be rescheduled once time again. If after rescheduling the original task
  reports status it should be discarded.

TODOs:
======
* add --branch name to get command, refactor internal queue not to be derived 
  from BlockingQueue.
* Replace log file publication with jenkins.
* persist the job and task list in the data base.
* the plug-in need to be restartable. That is when the
   plug in is brought back up after being down, it should resume where it
   left off. For example, a tinderbox should be able to ask for a task
   before a gerrit shutdown and then report the result after gerrit
   restart. This will make maintenance-driven restart less intrusive/costly.
* Pipe line visualisation: with gerrit jobs and tasks per platform are get
  currently building and pending.
* management cockpit/dashboard with previously build taskes with statistics.
* Enhance gerrit's core patch view with table containing tinderbox
  verification status on per platform base.
* If a patch is 'submitted' while the verification tinbuild are pending then
** we let already running tindebox finish, and still report the result
 in the 'review' comment as usual, but leave the verify flags untouched
** any platform that is not started yet is 'discarded' for that patch.
 IOW the tasks that are not started yet are de-queued by 'Submit'.
